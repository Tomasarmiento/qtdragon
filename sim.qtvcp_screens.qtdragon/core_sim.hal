
# Component instantiation
#***********************************************************************************
loadrt [KINS]KINEMATICS
#autoconverted  trivkins

loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS num_dio=64

#loadusr -W lcec_conf ethercat-conf.xml
#loadrt lcec
#loadrt jolIoenet names=ioenet
loadrt jolCoenet names=coenet

loadrt not count=5
loadrt or2 count=1
loadrt and2 count=6

loadrt pid names=x-posCtrl,y-posCtrl,z-posCtrl debug=0
loadrt time

# Loading of component functions to servo thread
#***********************************************************************************
#addf lcec.read-all          servo-thread
addf coenet.read-all        servo-thread
#addf ioenet.read-all        servo-thread
addf motion-command-handler servo-thread
addf motion-controller      servo-thread
addf x-posCtrl.do-pid-calcs servo-thread
addf y-posCtrl.do-pid-calcs servo-thread
addf z-posCtrl.do-pid-calcs servo-thread
addf coenet.write-all       servo-thread
addf not.0                  servo-thread
addf not.1                  servo-thread
addf not.2                  servo-thread
addf not.3                  servo-thread
addf not.4                  servo-thread
addf or2.0                  servo-thread
addf and2.0                 servo-thread
addf and2.1                 servo-thread
addf and2.2                 servo-thread
addf and2.3                 servo-thread
addf and2.4                 servo-thread
addf and2.5                 servo-thread
addf time.0                 servo-thread

#addf ioenet.write-all       servo-thread
#addf lcec.write-all         servo-thread


# Motion management
################################################################################
#setp motion.homing-inhibit 1

#setp coenet.DeviceMapping 1

#setp coenet.PositionMode 1
#lo comento para probar el jolCoenet.so v1.1.1

net emcEnabled <= coenet.EmcEnabled
net emcEnabled => iocontrol.0.emc-enable-in

net cncMotionEnabled <= motion.motion-enabled
net cncMotionEnabled => coenet.EnableCmd

net coenetMotionDropped <= coenet.MotionDropped
net coenetMotionDropped => motion.enable

#net posMode => coenet.PositionMode
#lo comento para probar el jolCoenet.so v1.1.1

net resetFaults => coenet.ResetFaults

net gcodeVelocity motion.requested-vel

# Joints
################################################################################

# x joint connections
#===========================================================
net x-enable <= joint.0.amp-enable-out
net x-posCmd <= joint.0.motor-pos-cmd
net x-velCmd <= joint.0.vel-cmd
net x-posFbk => joint.0.motor-pos-fb

net x-driveFault => joint.0.amp-fault-in

net x-negativeLimitSwitch => joint.0.neg-lim-sw-in
net x-positiveLimitSwitch => joint.0.pos-lim-sw-in
net x-homeSwitch => joint.0.home-sw-in

# y joint connections
#===========================================================
net y-enable <= joint.1.amp-enable-out
net y-posCmd <= joint.1.motor-pos-cmd
net y-velCmd <= joint.1.vel-cmd
net y-posFbk => joint.1.motor-pos-fb

net y-driveFault => joint.1.amp-fault-in

net y-negativeLimitSwitch => joint.1.neg-lim-sw-in
net y-positiveLimitSwitch => joint.1.pos-lim-sw-in
net y-homeSwitch => joint.1.home-sw-in

# z joint connections
#===========================================================
net z-enable <= joint.2.amp-enable-out
net z-posCmd <= joint.2.motor-pos-cmd
net z-velCmd <= joint.2.vel-cmd
net z-posFbk => joint.2.motor-pos-fb

net z-driveFault => joint.2.amp-fault-in

net z-negativeLimitSwitch => joint.2.neg-lim-sw-in
net z-positiveLimitSwitch => joint.2.pos-lim-sw-in
net z-homeSwitch => joint.2.home-sw-in


# Position control (PIDs)
################################################################################
net posCtrlEnable => x-posCtrl.enable
net posCtrlEnable => y-posCtrl.enable
net posCtrlEnable => z-posCtrl.enable
sets posCtrlEnable 1

# x axis
#===========================================================
net x-posCmd => x-posCtrl.command
net x-posFbk => x-posCtrl.feedback
#net x-velCmd <= x-posCtrl.output

setp x-posCtrl.Pgain 5 # Proportional gain
setp x-posCtrl.Igain 0 # Integral gain
setp x-posCtrl.Dgain 0 # Derivative gain
setp x-posCtrl.bias 0 # Constant offset on output
setp x-posCtrl.FF0 0 # Zeroth order feedforward - output proportional to command (position).
setp x-posCtrl.FF1 0.95 # First order feedforward - output proportional to derivative of command (velocity).
setp x-posCtrl.FF2 0 # Second order feedforward - output proportional to 2nd derivative of command (acceleration).
setp x-posCtrl.FF3 0 # Third order feedforward - output proportional to 3rd derivative of command (jerk).
setp x-posCtrl.deadband 0 # Amount of error that will be ignored
setp x-posCtrl.maxerror 0 # Limit on error
setp x-posCtrl.maxerrorI 0 # Limit on error integrator
setp x-posCtrl.maxerrorD 0 # Limit on error derivative
setp x-posCtrl.maxcmdD 300.0 # Limit on command derivative
setp x-posCtrl.maxcmdDD 500.0 # Limit on command 2nd derivative
setp x-posCtrl.maxcmdDDD 0 # Limit on command 3rd derivative
setp x-posCtrl.maxoutput 330.0 # Limit on output value

#All max* limits are implemented so that if the value of this parameter is zero, there is no limit.

# y axis
#===========================================================
net y-posCmd => y-posCtrl.command
net y-posFbk => y-posCtrl.feedback
#net y-velCmd <= y-posCtrl.output

setp y-posCtrl.Pgain 5 # Proportional gain
setp y-posCtrl.Igain 0 # Integral gain
setp y-posCtrl.Dgain 0 # Derivative gain
setp y-posCtrl.bias 0 # Constant offset on output
setp y-posCtrl.FF0 0 # Zeroth order feedforward - output proportional to command (position).
setp y-posCtrl.FF1 0.95 # First order feedforward - output proportional to derivative of command (velocity).
setp y-posCtrl.FF2 0 # Second order feedforward - output proportional to 2nd derivative of command (acceleration).
setp y-posCtrl.FF3 0 # Third order feedforward - output proportional to 3rd derivative of command (jerk).
setp y-posCtrl.deadband 0 # Amount of error that will be ignored
setp y-posCtrl.maxerror 0 # Limit on error
setp y-posCtrl.maxerrorI 0 # Limit on error integrator
setp y-posCtrl.maxerrorD 0 # Limit on error derivative
setp y-posCtrl.maxcmdD 300.0 # Limit on command derivative
setp y-posCtrl.maxcmdDD 500.0 # Limit on command 2nd derivative
setp y-posCtrl.maxcmdDDD 0 # Limit on command 3rd derivative
setp y-posCtrl.maxoutput 330.0 # Limit on output value

#All max* limits are implemented so that if the value of this parameter is zero, there is no limit.

# z axis
#===========================================================
net z-posCmd => z-posCtrl.command
net z-posFbk => z-posCtrl.feedback
#net z-velCmd <= z-posCtrl.output

setp z-posCtrl.Pgain 5 # Proportional gain
setp z-posCtrl.Igain 0 # Integral gain
setp z-posCtrl.Dgain 0 # Derivative gain
setp z-posCtrl.bias 0 # Constant offset on output
setp z-posCtrl.FF0 0 # Zeroth order feedforward - output proportional to command (position).
setp z-posCtrl.FF1 0.95 # First order feedforward - output proportional to derivative of command (velocity).
setp z-posCtrl.FF2 0 # Second order feedforward - output proportional to 2nd derivative of command (acceleration).
setp z-posCtrl.FF3 0 # Third order feedforward - output proportional to 3rd derivative of command (jerk).
setp z-posCtrl.deadband 0 # Amount of error that will be ignored
setp z-posCtrl.maxerror 0 # Limit on error
setp z-posCtrl.maxerrorI 0 # Limit on error integrator
setp z-posCtrl.maxerrorD 0 # Limit on error derivative
setp z-posCtrl.maxcmdD 300.0 # Limit on command derivative
setp z-posCtrl.maxcmdDD 500.0 # Limit on command 2nd derivative
setp z-posCtrl.maxcmdDDD 0 # Limit on command 3rd derivative
setp z-posCtrl.maxoutput 330.0 # Limit on output value

#All max* limits are implemented so that if the value of this parameter is zero, there is no limit.

# coenet
################################################################################
#setp coenet.pos-scale 3600000
#setp coenet.velo-scale 600000

# x axis
#===========================================================
net x-posCmd => coenet.X-positionCmd
net x-velCmd => coenet.X-velocityCmd

net x-setCurrentPosition => coenet.X-SetCurrentPosition
net x-currentPositionSetting => coenet.X-CurrentPositionSetting

net x-stateFbk <= coenet.X-stateFbk
net x-endingCodeFbk <= coenet.X-endingCodeFbk
net x-posFbk <= coenet.X-positionFbk
net x-velFbk <= coenet.X-velocityFbk
net x-posRef <= coenet.X-positionRef
net x-velRef <= coenet.X-velocityRef
net x-targetReached <= coenet.X-targetReached

net x-driveOperational <= coenet.X-driveOperational
net x-driveReady <= coenet.X-driveReady
net x-driveEnabled <= coenet.X-driveEnabled
net x-driveFault <= coenet.X-driveFault

net x-negativeLimitSwitch <= coenet.X-negativeLimitSwitch 
net x-positiveLimitSwitch <= coenet.X-positiveLimitSwitch
net x-homeSwitch <= coenet.X-homeSwitch

net x-negativePositionLimit <= coenet.X-negativePositionLimit
net x-positivePositionLimit <= coenet.X-positivePositionLimit
net x-negativeTorqueLimit <= coenet.X-negativeTorqueLimit
net x-positiveTorqueLimit <= coenet.X-positiveTorqueLimit

# y axis
#===========================================================
net y-posCmd => coenet.Y-positionCmd
net y-velCmd => coenet.Y-velocityCmd

net y-setCurrentPosition => coenet.Y-SetCurrentPosition
net y-currentPositionSetting => coenet.Y-CurrentPositionSetting

net y-stateFbk <= coenet.Y-stateFbk
net y-endingCodeFbk <= coenet.Y-endingCodeFbk
net y-posFbk <= coenet.Y-positionFbk
net y-velFbk <= coenet.Y-velocityFbk
net y-posRef <= coenet.Y-positionRef
net y-velRef <= coenet.Y-velocityRef
net y-targetReached <= coenet.Y-targetReached

net y-driveOperational <= coenet.Y-driveOperational
net y-driveReady <= coenet.Y-driveReady
net y-driveEnabled <= coenet.Y-driveEnabled
net y-driveFault <= coenet.Y-driveFault

net y-negativeLimitSwitch <= coenet.Y-negativeLimitSwitch
net y-positiveLimitSwitch <= coenet.Y-positiveLimitSwitch
net y-homeSwitch <= coenet.Y-homeSwitch

net y-negativePositionLimit <= coenet.Y-negativePositionLimit
net y-positivePositionLimit <= coenet.Y-positivePositionLimit
net y-negativeTorqueLimit <= coenet.Y-negativeTorqueLimit
net y-positiveTorqueLimit <= coenet.Y-positiveTorqueLimit

# z axis
#===========================================================
net z-posCmd => coenet.Z-positionCmd
net z-velCmd => coenet.Z-velocityCmd

net z-setCurrentPosition => coenet.Z-SetCurrentPosition
net z-currentPositionSetting => coenet.Z-CurrentPositionSetting

net z-stateFbk <= coenet.Z-stateFbk
net z-endingCodeFbk <= coenet.Z-endingCodeFbk
net z-posFbk <= coenet.Z-positionFbk
net z-velFbk <= coenet.Z-velocityFbk
net z-posRef <= coenet.Z-positionRef
net z-velRef <= coenet.Z-velocityRef
net z-targetReached <= coenet.Z-targetReached

net z-driveOperational <= coenet.Z-driveOperational
net z-driveReady <= coenet.Z-driveReady
net z-driveEnabled <= coenet.Z-driveEnabled
net z-driveFault <= coenet.Z-driveFault

net z-negativeLimitSwitch <= coenet.Z-negativeLimitSwitch
net z-positiveLimitSwitch <= coenet.Z-positiveLimitSwitch
net z-homeSwitch <= coenet.Z-homeSwitch

net z-negativePositionLimit <= coenet.Z-negativePositionLimit
net z-positivePositionLimit <= coenet.Z-positivePositionLimit
net z-negativeTorqueLimit <= coenet.Z-negativeTorqueLimit
net z-positiveTorqueLimit <= coenet.Z-positiveTorqueLimit

#########################################################################

#bancal carga
#leds
net SEN_bc_pc => coenet.DigIn-107 <= motion.digital-in-07
net SEN_bc_down => coenet.DigIn-109 <= motion.digital-in-09
net SEN_bc_up => coenet.DigIn-106 <= motion.digital-in-06
net SEN_bc_frw => coenet.DigIn-125 <= motion.digital-in-36
net SEN_bc_bkw => coenet.DigIn-124 <= motion.digital-in-37

#botones accionamientos
net EV_bc_up <= coenet.DigOutCmd-110 #<= motion.digital-out-10
net EV_bc_down <= coenet.DigOutCmd-109 #<= motion.digital-out-09
net EV_bc_frw <= coenet.DigOutCmd-122 #<= motion.digital-out-09
net EV_bc_bkw <= coenet.DigOutCmd-123 #<= motion.digital-out-09

#########################################################################

#bancal descarga
#leds
net SEN_bd_pc => coenet.DigIn-115 <= motion.digital-in-15 <= not.3.in
net SEN_bd_pc_nc => not.3.out
net SEN_bd_full => coenet.DigIn-101 <= motion.digital-in-01
net SEN_bd_up => coenet.DigIn-105 <= motion.digital-in-05
net SEN_bd_down => coenet.DigIn-104 <= motion.digital-in-04
net SEN_bd_frw => coenet.DigIn-122 <= motion.digital-in-38
net SEN_bd_bkw => coenet.DigIn-123 <= motion.digital-in-39

#botones accionamientos
net EV_bd_up <= coenet.DigOutCmd-111 #<= motion.digital-out-11
net EV_bd_down <= coenet.DigOutCmd-112 #<= motion.digital-out-12
net EV_bd_frw <= coenet.DigOutCmd-120 #<= motion.digital-out-09
net EV_bd_bkw <= coenet.DigOutCmd-121 #<= motion.digital-out-09

#########################################################################

#segregador carga
#leds
net SEN_seg_pc => coenet.DigIn-103 #<= motion.digital-in-03
net SEN_seg_overturn => coenet.DigIn-102 #<= motion.digital-in-02
net SEN_seg_idle => coenet.DigIn-108 #<= motion.digital-in-08

#botones accionamientos
net EV_seg_overturn <= coenet.DigOutCmd-108 #<= motion.digital-out-08
net EV_seg_idle <= coenet.DigOutCmd-107 #<= motion.digital-out-07


########################################################################

#soplador/parking
#leds
net SEN_blw_pc => coenet.DigIn-116 <= motion.digital-in-16
net SEN_park_pc => coenet.DigIn-114 <= motion.digital-in-14
net SEN_blw_closed => coenet.DigIn-118 <= motion.digital-in-18
net SEN_blw_open => coenet.DigIn-117 <= motion.digital-in-17

#botones accionamientos
net EV_blw_open_cobertor <= coenet.DigOutCmd-106 #<= motion.digital-out-06
net EV_blw_close_cobertor <= coenet.DigOutCmd-105 #<= motion.digital-out-05
net EV_blw_on <= coenet.DigOutCmd-115 <= motion.digital-in-28

########################################################################

#volteador
#leds
net SEN_volt_claw_open => coenet.DigIn-113 <= motion.digital-in-13
net SEN_volt_claw_closed => coenet.DigIn-112 <= motion.digital-in-12
net SEN_volt_180_side => coenet.DigIn-111 <= motion.digital-in-11
net SEN_volt_0_side => coenet.DigIn-110 <= motion.digital-in-10

#botones accionamientos
net EV_volt_claw_open <= coenet.DigOutCmd-103 <= motion.digital-out-03
net EV_volt_claw_closed <= coenet.DigOutCmd-104 <= motion.digital-out-04
net EV_volt_180_side <= coenet.DigOutCmd-101 <= motion.digital-out-01
net EV_volt_0_side <= coenet.DigOutCmd-102 <= motion.digital-out-02

########################################################################

#gantry

#tiene la logica de que use como probe el sensor del gripper 1 ó el del gripper 2
#usamos and2, or y not

#leds
net SEN_gr_d_open => coenet.DigIn-205 <= motion.digital-in-25
net SEN_gr_d_closed => coenet.DigIn-203 <= motion.digital-in-23
net SEN_gr_d_pc => coenet.DigIn-201 <= motion.digital-in-21 <= not.0.in
net probe_d => motion.digital-in-40 <= and2.0.in0 <= not.0.out

net SEN_gr_u_closed => coenet.DigIn-204 <= motion.digital-in-24
net SEN_gr_u_open => coenet.DigIn-206 <= motion.digital-in-26
net SEN_gr_u_pc => coenet.DigIn-202 <= motion.digital-in-22 <= not.1.in
net probe_u => motion.digital-in-41 <= and2.1.in0 <= not.1.out

net probe_salida_and2_0 => and2.0.out <= or2.0.in0
net probe_salida_and2_1 => and2.1.out  <= or2.0.in1
net probe => motion.probe-input <= or2.0.out 

#flags de intercambio
net CTRL_gantry_probe_selecd => motion.digital-out-59 <= and2.0.in1
net CTRL_gantry_probe_selecu => motion.digital-out-58 <= and2.1.in1

#axis soft limit
#+++++ qué es y qué hace acá ???? +++++
net soft_limit => motion.on-soft-limit

#botones accionamientos
net EV_gr_u_open <= coenet.DigOutCmd-203 <= motion.digital-out-23
net EV_gr_u_closed <= coenet.DigOutCmd-204 <= motion.digital-out-24
net EV_gr_d_open <= coenet.DigOutCmd-202 <= motion.digital-out-22
net EV_gr_d_closed <= coenet.DigOutCmd-201 <= motion.digital-out-21

########################################################################

#pateador
#leds
#se cambia sensores de pateador por mal cableado
#net SEN_pat_pc => coenet.DigIn-127 <= motion.digital-in-34
#net SEN_pat_bkw => coenet.DigIn-131 <= motion.digital-in-31
#net SEN_pat_frw => coenet.DigIn-128 <= motion.digital-in-32
#net SEN_pat_up => coenet.DigIn-129 <= motion.digital-in-33
#net SEN_pat_down => coenet.DigIn-130 <= motion.digital-in-30

net SEN_pat_pc => coenet.DigIn-132 <= motion.digital-in-34
net SEN_pat_bkw => coenet.DigIn-128 <= motion.digital-in-31
net SEN_pat_frw => coenet.DigIn-129 <= motion.digital-in-32
net SEN_pat_up => coenet.DigIn-130 <= motion.digital-in-33
net SEN_pat_down => coenet.DigIn-131 <= motion.digital-in-30

#botones accionamientos
net EV_pat_frw => coenet.DigOutCmd-116 #<= motion.digital-in-32
net EV_pat_bkw => coenet.DigOutCmd-117 #<= motion.digital-in-31
net EV_pat_down => coenet.DigOutCmd-118 #<= motion.digital-in-30
net EV_pat_up => coenet.DigOutCmd-119 #<= motion.digital-in-29

########################################################################

#torno son 14
#leds
net SEN_tor_gate_open => coenet.DigIn-119 <= motion.digital-in-20 <= coenet.DigOutCmd-014 #roof dor open-zapatilla okuma
net SEN_tor_gate_closed => coenet.DigIn-120 <= motion.digital-in-19 <= coenet.DigOutCmd-013 #roof dor closed-zapatilla okuma
#estado de torno - entradas del Gantry
net RI_tor_cc_confirm <= coenet.DigIn-002 <= motion.digital-in-42 #chuck clamp
net RI_tor_cu_confirm <= coenet.DigIn-003 <= motion.digital-in-43 #chuck unclamp
net RI_tor_so1_confirm <= coenet.DigIn-005 <= motion.digital-in-45 #spindle orientation 1
net RI_tor_so2_confirm <= coenet.DigIn-004 <= motion.digital-in-44 #spindle orientation 2
net RI_tor_ep_confirm <= coenet.DigIn-007 <= motion.digital-in-47 #end program - CYCLE COMPLETE
net RI_tor_home_confirm <= coenet.DigIn-008 <= motion.digital-in-48 #MACHINE HOME POSITION
net RI_tor_sl_confirm <= coenet.DigIn-009 <= motion.digital-in-55 #system link
net RI_tor_alarm_confirm <= coenet.DigIn-006 <= motion.digital-in-46 #NC ALARM
net RI_tor_cstop_confirm <= coenet.DigIn-010 <= motion.digital-in-50 #CYCLE STOP REQUEST
net RI_tor_m180_confirm <= coenet.DigIn-011 <= motion.digital-in-51 #REQUEST 1 (M180)
net RI_tor_m181_confirm <= coenet.DigIn-012 <= motion.digital-in-52 #REQUEST 2 (M181)

#accionamientos torno robot interface - salidas del Gantry
net RI_tor_cc <= coenet.DigOutCmd-003 <= motion.digital-out-43 #chuck clamp
net RI_tor_cu <= coenet.DigOutCmd-004 <= motion.digital-out-44 #chuck unclamp
net RI_tor_so1 <= coenet.DigOutCmd-006 <= motion.digital-out-46 #spindle orientation 1
net RI_tor_so2 <= coenet.DigOutCmd-005 <= motion.digital-out-47 #spindle orientation 2
net RI_tor_ofm <= coenet.DigOutCmd-008 <= motion.digital-out-48 #out of machine
net RI_tor_cs <= coenet.DigOutCmd-010 <= motion.digital-out-50 #cycle start
net RI_tor_spare <= coenet.DigOutCmd-011 <= motion.digital-out-51 #spare
net RI_tor_mfin <= coenet.DigOutCmd-012 <= motion.digital-out-52 #mfin - REQUEST ANSWER (MFIN)
net RI_tor_sl <= coenet.DigOutCmd-007 <= halui.mode.is-auto #system link - motion.digital-out-57 para usar en codigo g
net RI_tor_ga <= halui.estop.is-activated <= not.4.in #gantry alarm - motion.digital-out-39- ROBOT/LOADER ALARM - falta vincular a alarma - falta agregarlo en front
net RI_tor_ga_nc => not.4.out <= coenet.DigOutCmd-009
#botones accionamientos
net EV_tor_gate_open <= coenet.DigOutCmd-114 <= motion.digital-out-13
net EV_tor_gate_closed <= coenet.DigOutCmd-113 <= motion.digital-out-14

########################################################################

#home sequence
#hace home cuando le das enable y no está homeado aún (and2)
#el home es con absolute encoder opción 2 que deja el valor que ya estaba leyendo en cada eje

net x_axis_homed => halui.joint.0.is-homed <= and2.4.in0
net y_axis_homed => halui.joint.1.is-homed <= and2.4.in1
net z_axis_homed => halui.joint.2.is-homed <= and2.5.in0 

net axis_xy_homed => and2.4.out <= and2.5.in1

net axis_xyz_homed => and2.5.out <= not.2.in

net axis_xyz_homed_negado => not.2.out <= and2.3.in0

net cncMotionEnabled <= and2.3.in1

net cmd_home_all => halui.home-all <= and2.3.out

